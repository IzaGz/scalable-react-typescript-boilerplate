import {{ properCase name }} from './';
{{#if wantActionsAndReducer}}
import {
  {{ properCase name }}ActionType,
  LoadInitiationAction,
  LoadSuccessAction,
  LoadFailureAction,
  LoadCancelAction,
} from './actions';
export interface ErrorType { message: string }

export type LOAD_INITIATION_TYPE = '{{ uppercase name }}/LOAD_INITIATION';
export type LOAD_SUCCESS_TYPE = '{{ uppercase name }}/LOAD_SUCCESS';
export type LOAD_FAILURE_TYPE = '{{ uppercase name }}/LOAD_FAILURE';
export type LOAD_CANCEL_TYPE = '{{ uppercase name }}/LOAD_CANCEL';

export interface {{ properCase name }}Props extends React.Props<typeof {{ properCase name }}> {
  isLoading: boolean;
  error?: ErrorType;
  data?: any;
}

export interface {{ properCase name }}State {
  isLoading: boolean;
  error?: ErrorType;
  data?: any;
}

export interface {{ properCase name }}Action {
  type: {{ properCase name }}ActionType;
  error?: ErrorType;
  data?: any;
}

export interface {{ properCase name }}DispatchProps {
  actions: {
    loadInitiation: () => LoadInitiationAction;
    loadSuccess: (data: any) => LoadSuccessAction;
    loadFailure: (error: ErrorType) => LoadFailureAction;
    loadCancel: () => LoadCancelAction;
  };
}

export type {{ properCase name }}PropTypes = {{ properCase name }}Props & {{ properCase name }}DispatchProps;
{{else}}
export interface {{ properCase name }}PropTypes extends React.Props<{{ properCase name }}> {

}

{{/if}}